//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxIOSettings : FbxObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxIOSettings(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxIOSettings_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxIOSettings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static SWIGTYPE_p_FbxClassId ClassId {
    set {
      fbx_wrapperPINVOKE.FbxIOSettings_ClassId_set(SWIGTYPE_p_FbxClassId.getCPtr(value));
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_FbxClassId ret = new SWIGTYPE_p_FbxClassId(fbx_wrapperPINVOKE.FbxIOSettings_ClassId_get(), true);
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public override SWIGTYPE_p_FbxClassId GetClassId() {
    SWIGTYPE_p_FbxClassId ret = new SWIGTYPE_p_FbxClassId(fbx_wrapperPINVOKE.FbxIOSettings_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxIOSettings Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxIOSettings_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxIOSettings ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxIOSettings(cPtr, false);
    return ret;
  }

  public new static FbxIOSettings Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxIOSettings_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxIOSettings ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxIOSettings(cPtr, false);
    return ret;
  }

  public FbxProperty AddPropertyGroup(string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_0(swigCPtr, pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(string pName, SWIGTYPE_p_FbxDataType pDataType) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_1(swigCPtr, pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_2(swigCPtr, pName), true);
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, bool pVisible, bool pSavable, bool pEnabled) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_3(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, pVisible, pSavable, pEnabled), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, bool pVisible, bool pSavable) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_4(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, pVisible, pSavable), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, bool pVisible) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_5(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, pVisible), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_6(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_7(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyGroup(FbxProperty pParentProperty, string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyGroup__SWIG_8(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, bool pVisible, bool pSavable, bool pEnabled) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_0(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), pVisible, pSavable, pEnabled), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, bool pVisible, bool pSavable) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_1(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), pVisible, pSavable), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, bool pVisible) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_2(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), pVisible), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_3(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_4(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_5(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddProperty(FbxProperty pParentProperty, string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddProperty__SWIG_6(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, SWIGTYPE_p_double pMinValue, SWIGTYPE_p_double pMaxValue, bool pVisible, bool pSavable, bool pEnabled) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_0(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), SWIGTYPE_p_double.getCPtr(pMinValue), SWIGTYPE_p_double.getCPtr(pMaxValue), pVisible, pSavable, pEnabled), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, SWIGTYPE_p_double pMinValue, SWIGTYPE_p_double pMaxValue, bool pVisible, bool pSavable) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_1(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), SWIGTYPE_p_double.getCPtr(pMinValue), SWIGTYPE_p_double.getCPtr(pMaxValue), pVisible, pSavable), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, SWIGTYPE_p_double pMinValue, SWIGTYPE_p_double pMaxValue, bool pVisible) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_2(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), SWIGTYPE_p_double.getCPtr(pMinValue), SWIGTYPE_p_double.getCPtr(pMaxValue), pVisible), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, SWIGTYPE_p_double pMinValue, SWIGTYPE_p_double pMaxValue) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_3(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), SWIGTYPE_p_double.getCPtr(pMinValue), SWIGTYPE_p_double.getCPtr(pMaxValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue, SWIGTYPE_p_double pMinValue) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_4(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue), SWIGTYPE_p_double.getCPtr(pMinValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel, SWIGTYPE_p_void pValue) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_5(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel, SWIGTYPE_p_void.getCPtr(pValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType, string pLabel) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_6(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType), pLabel), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName, SWIGTYPE_p_FbxDataType pDataType) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_7(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName, SWIGTYPE_p_FbxDataType.getCPtr(pDataType)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty AddPropertyMinMax(FbxProperty pParentProperty, string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_AddPropertyMinMax__SWIG_8(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxProperty GetProperty(string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_GetProperty__SWIG_0(swigCPtr, pName), true);
    return ret;
  }

  public FbxProperty GetProperty(FbxProperty pParentProperty, string pName) {
    FbxProperty ret = new FbxProperty(fbx_wrapperPINVOKE.FbxIOSettings_GetProperty__SWIG_1(swigCPtr, FbxProperty.getCPtr(pParentProperty), pName), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetBoolProp(string pName, bool pDefValue) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_GetBoolProp(swigCPtr, pName, pDefValue);
    return ret;
  }

  public void SetBoolProp(string pName, bool pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetBoolProp(swigCPtr, pName, pValue);
  }

  public double GetDoubleProp(string pName, double pDefValue) {
    double ret = fbx_wrapperPINVOKE.FbxIOSettings_GetDoubleProp(swigCPtr, pName, pDefValue);
    return ret;
  }

  public void SetDoubleProp(string pName, double pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetDoubleProp(swigCPtr, pName, pValue);
  }

  public int GetIntProp(string pName, int pDefValue) {
    int ret = fbx_wrapperPINVOKE.FbxIOSettings_GetIntProp(swigCPtr, pName, pDefValue);
    return ret;
  }

  public void SetIntProp(string pName, int pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetIntProp(swigCPtr, pName, pValue);
  }

  public FbxTime GetTimeProp(string pName, FbxTime pDefValue) {
    FbxTime ret = new FbxTime(fbx_wrapperPINVOKE.FbxIOSettings_GetTimeProp(swigCPtr, pName, FbxTime.getCPtr(pDefValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetTimeProp(string pName, FbxTime pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetTimeProp(swigCPtr, pName, FbxTime.getCPtr(pValue));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxString GetEnumProp(string pName, FbxString pDefValue) {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxIOSettings_GetEnumProp__SWIG_0(swigCPtr, pName, FbxString.getCPtr(pDefValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetEnumProp(string pName, int pDefValue) {
    int ret = fbx_wrapperPINVOKE.FbxIOSettings_GetEnumProp__SWIG_1(swigCPtr, pName, pDefValue);
    return ret;
  }

  public int GetEnumIndex(string pName, FbxString pValue) {
    int ret = fbx_wrapperPINVOKE.FbxIOSettings_GetEnumIndex__SWIG_0(swigCPtr, pName, FbxString.getCPtr(pValue));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetEnumProp(string pName, FbxString pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetEnumProp__SWIG_0(swigCPtr, pName, FbxString.getCPtr(pValue));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetEnumProp(string pName, int pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetEnumProp__SWIG_1(swigCPtr, pName, pValue);
  }

  public void RemoveEnumPropValue(string pName, FbxString pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_RemoveEnumPropValue(swigCPtr, pName, FbxString.getCPtr(pValue));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void EmptyEnumProp(string pName) {
    fbx_wrapperPINVOKE.FbxIOSettings_EmptyEnumProp(swigCPtr, pName);
  }

  public bool IsEnumExist(FbxProperty pProp, FbxString enumString) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_IsEnumExist(swigCPtr, FbxProperty.getCPtr(pProp), FbxString.getCPtr(enumString));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetEnumIndex(FbxProperty pProp, FbxString enumString, bool pNoCase) {
    int ret = fbx_wrapperPINVOKE.FbxIOSettings_GetEnumIndex__SWIG_1(swigCPtr, FbxProperty.getCPtr(pProp), FbxString.getCPtr(enumString), pNoCase);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetEnumIndex(FbxProperty pProp, FbxString enumString) {
    int ret = fbx_wrapperPINVOKE.FbxIOSettings_GetEnumIndex__SWIG_2(swigCPtr, FbxProperty.getCPtr(pProp), FbxString.getCPtr(enumString));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool SetFlag(string pName, SWIGTYPE_p_FbxPropertyFlags__EFlags propFlag, bool pValue) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_SetFlag(swigCPtr, pName, SWIGTYPE_p_FbxPropertyFlags__EFlags.getCPtr(propFlag), pValue);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxString GetStringProp(string pName, FbxString pDefValue) {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxIOSettings_GetStringProp(swigCPtr, pName, FbxString.getCPtr(pDefValue)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetStringProp(string pName, FbxString pValue) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetStringProp(swigCPtr, pName, FbxString.getCPtr(pValue));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool ReadXMLFile(FbxString path) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_ReadXMLFile(swigCPtr, FbxString.getCPtr(path));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool WriteXMLFile(FbxString path) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_WriteXMLFile(swigCPtr, FbxString.getCPtr(path));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool WriteXmlPropToFile(FbxString pFullPath, FbxString propPath) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_WriteXmlPropToFile(swigCPtr, FbxString.getCPtr(pFullPath), FbxString.getCPtr(propPath));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FbxIOPropInfo GetPropInfo(FbxProperty pProp) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxIOSettings_GetPropInfo(swigCPtr, FbxProperty.getCPtr(pProp));
    SWIGTYPE_p_FbxIOPropInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxIOPropInfo(cPtr, false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxIOSettings.ELanguage UILanguage {
    set {
      fbx_wrapperPINVOKE.FbxIOSettings_UILanguage_set(swigCPtr, (int)value);
    } 
    get {
      FbxIOSettings.ELanguage ret = (FbxIOSettings.ELanguage)fbx_wrapperPINVOKE.FbxIOSettings_UILanguage_get(swigCPtr);
      return ret;
    } 
  }

  public FbxString GetLanguageLabel(FbxProperty pProp) {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxIOSettings_GetLanguageLabel(swigCPtr, FbxProperty.getCPtr(pProp)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetLanguageLabel(FbxProperty pProp, FbxString pLabel) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetLanguageLabel(swigCPtr, FbxProperty.getCPtr(pProp), FbxString.getCPtr(pLabel));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxIOInfo impInfo {
    set {
      fbx_wrapperPINVOKE.FbxIOSettings_impInfo_set(swigCPtr, FbxIOInfo.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxIOSettings_impInfo_get(swigCPtr);
      FbxIOInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxIOInfo(cPtr, false);
      return ret;
    } 
  }

  public FbxIOInfo expInfo {
    set {
      fbx_wrapperPINVOKE.FbxIOSettings_expInfo_set(swigCPtr, FbxIOInfo.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxIOSettings_expInfo_get(swigCPtr);
      FbxIOInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxIOInfo(cPtr, false);
      return ret;
    } 
  }

  public static FbxString GetUserMyDocumentDir() {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxIOSettings_GetUserMyDocumentDir(), true);
    return ret;
  }

  public void SetPropVisible(FbxProperty pProp, bool pWithChildren, bool pVisible) {
    fbx_wrapperPINVOKE.FbxIOSettings_SetPropVisible(swigCPtr, FbxProperty.getCPtr(pProp), pWithChildren, pVisible);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool ReadXmlPropFromMyDocument(FbxString subDir, FbxString filename) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_ReadXmlPropFromMyDocument(swigCPtr, FbxString.getCPtr(subDir), FbxString.getCPtr(filename));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool WriteXmlPropToMyDocument(FbxString subDir, FbxString filename, FbxString propPath) {
    bool ret = fbx_wrapperPINVOKE.FbxIOSettings_WriteXmlPropToMyDocument(swigCPtr, FbxString.getCPtr(subDir), FbxString.getCPtr(filename), FbxString.getCPtr(propPath));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string GetFileMergeDescription(int pIndex) {
    string ret = fbx_wrapperPINVOKE.FbxIOSettings_GetFileMergeDescription(pIndex);
    return ret;
  }

  public enum ELanguage {
    eENU,
    eDEU,
    eFRA,
    eJPN,
    eKOR,
    eCHS,
    ePTB,
    eLanguageCount
  }

  public enum ELoadMode {
    eCreate,
    eMerge,
    eExclusiveMerge
  }

  public enum EQuaternionMode {
    eAsQuaternion,
    eAsEuler,
    eResample
  }

  public enum EObjectDerivation {
    eByLayer,
    eByEntity,
    eByBlock
  }

  public enum ESysUnits {
    eUnitsUser,
    eUnitsInches,
    eUnitsFeet,
    eUnitYards,
    eUnitsMiles,
    eUnitsMillimeters,
    eUnitsCentimeters,
    eUnitsMeters,
    eUnitsKilometers
  }

  public enum ESysFrameRate {
    eFrameRateUser,
    eFrameRateHours,
    eFrameRateMinutes,
    eFrameRateSeconds,
    eFrameRateMilliseconds,
    eFrameRateGames15,
    eFrameRateFilm24,
    eFrameRatePAL25,
    eFrameRateNTSC30,
    eFrameRateShowScan48,
    eFrameRatePALField50,
    eFrameRateNTSCField60
  }

  public enum EEnveloppeSystem {
    eSkinModifier,
    ePhysic,
    eBonePro,
    eEnveloppeSystemCount
  }

  public enum EGeometryType {
    eTriangle,
    eSimplifiedPoly,
    ePolygon,
    eNurbs,
    ePatch,
    eGeometryTypeCount
  }

  public enum EIKType {
    eNone,
    eFBIK,
    eHumanIK
  }

}

}
