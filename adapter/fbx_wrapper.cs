//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class fbx_wrapper {
  public static sbyte FbxMin(sbyte arg0) {
    sbyte ret = fbx_wrapperPINVOKE.FbxMin__SWIG_0(arg0);
    return ret;
  }

  public static byte FbxMin(byte arg0) {
    byte ret = fbx_wrapperPINVOKE.FbxMin__SWIG_1(arg0);
    return ret;
  }

  public static short FbxMin(short arg0) {
    short ret = fbx_wrapperPINVOKE.FbxMin__SWIG_2(arg0);
    return ret;
  }

  public static ushort FbxMin(ushort arg0) {
    ushort ret = fbx_wrapperPINVOKE.FbxMin__SWIG_3(arg0);
    return ret;
  }

  public static int FbxMin(int arg0) {
    int ret = fbx_wrapperPINVOKE.FbxMin__SWIG_4(arg0);
    return ret;
  }

  public static uint FbxMin(uint arg0) {
    uint ret = fbx_wrapperPINVOKE.FbxMin__SWIG_5(arg0);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxMin(SWIGTYPE_p_signed___int64 arg0) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxMin__SWIG_6(SWIGTYPE_p_signed___int64.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_unsigned___int64 FbxMin(SWIGTYPE_p_unsigned___int64 arg0) {
    SWIGTYPE_p_unsigned___int64 ret = new SWIGTYPE_p_unsigned___int64(fbx_wrapperPINVOKE.FbxMin__SWIG_7(SWIGTYPE_p_unsigned___int64.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static float FbxMin(float arg0) {
    float ret = fbx_wrapperPINVOKE.FbxMin__SWIG_8(arg0);
    return ret;
  }

  public static double FbxMin(double arg0) {
    double ret = fbx_wrapperPINVOKE.FbxMin__SWIG_9(arg0);
    return ret;
  }

  public static sbyte FbxMax(sbyte arg0) {
    sbyte ret = fbx_wrapperPINVOKE.FbxMax__SWIG_0(arg0);
    return ret;
  }

  public static byte FbxMax(byte arg0) {
    byte ret = fbx_wrapperPINVOKE.FbxMax__SWIG_1(arg0);
    return ret;
  }

  public static short FbxMax(short arg0) {
    short ret = fbx_wrapperPINVOKE.FbxMax__SWIG_2(arg0);
    return ret;
  }

  public static ushort FbxMax(ushort arg0) {
    ushort ret = fbx_wrapperPINVOKE.FbxMax__SWIG_3(arg0);
    return ret;
  }

  public static int FbxMax(int arg0) {
    int ret = fbx_wrapperPINVOKE.FbxMax__SWIG_4(arg0);
    return ret;
  }

  public static uint FbxMax(uint arg0) {
    uint ret = fbx_wrapperPINVOKE.FbxMax__SWIG_5(arg0);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FbxMax(SWIGTYPE_p_signed___int64 arg0) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxMax__SWIG_6(SWIGTYPE_p_signed___int64.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_unsigned___int64 FbxMax(SWIGTYPE_p_unsigned___int64 arg0) {
    SWIGTYPE_p_unsigned___int64 ret = new SWIGTYPE_p_unsigned___int64(fbx_wrapperPINVOKE.FbxMax__SWIG_7(SWIGTYPE_p_unsigned___int64.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static float FbxMax(float arg0) {
    float ret = fbx_wrapperPINVOKE.FbxMax__SWIG_8(arg0);
    return ret;
  }

  public static double FbxMax(double arg0) {
    double ret = fbx_wrapperPINVOKE.FbxMax__SWIG_9(arg0);
    return ret;
  }

  public static void GetAllAnimCurves(FbxAnimStack pAnimStack, SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t pCurves) {
    fbx_wrapperPINVOKE.GetAllAnimCurves__SWIG_0(FbxAnimStack.getCPtr(pAnimStack), SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t.getCPtr(pCurves));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void GetAllAnimCurves(FbxObject pObj, FbxAnimStack pAnimStack, SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t pCurves) {
    fbx_wrapperPINVOKE.GetAllAnimCurves__SWIG_1(FbxObject.getCPtr(pObj), FbxAnimStack.getCPtr(pAnimStack), SWIGTYPE_p_FbxArrayT_FbxAnimCurve_p_t.getCPtr(pCurves));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_EFbxType FbxTypeOf(SWIGTYPE_p_EFbxRotationOrder arg0) {
    SWIGTYPE_p_EFbxType ret = new SWIGTYPE_p_EFbxType(fbx_wrapperPINVOKE.FbxTypeOf__SWIG_0(SWIGTYPE_p_EFbxRotationOrder.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_EFbxType FbxTypeOf(SWIGTYPE_p_FbxTransform__EInheritType arg0) {
    SWIGTYPE_p_EFbxType ret = new SWIGTYPE_p_EFbxType(fbx_wrapperPINVOKE.FbxTypeOf__SWIG_1(SWIGTYPE_p_FbxTransform__EInheritType.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_EFbxType FbxTypeOf(SWIGTYPE_p_EFbxQuatInterpMode arg0) {
    SWIGTYPE_p_EFbxType ret = new SWIGTYPE_p_EFbxType(fbx_wrapperPINVOKE.FbxTypeOf__SWIG_2(SWIGTYPE_p_EFbxQuatInterpMode.getCPtr(arg0)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static readonly int _MSC_VER = fbx_wrapperPINVOKE._MSC_VER_get();
  public static readonly int FBXSDK_ENV_WIN = fbx_wrapperPINVOKE.FBXSDK_ENV_WIN_get();
  public static readonly int FBXSDK_ARCH_AMD64 = fbx_wrapperPINVOKE.FBXSDK_ARCH_AMD64_get();
  public static readonly int FBXSDK_CPU_64 = fbx_wrapperPINVOKE.FBXSDK_CPU_64_get();
  public static readonly int FBXSDK_COMPILER_MSC = fbx_wrapperPINVOKE.FBXSDK_COMPILER_MSC_get();
  public static readonly int NULL = fbx_wrapperPINVOKE.NULL_get();
  public static readonly int _MAX_PATH = fbx_wrapperPINVOKE._MAX_PATH_get();
  public static readonly int FBXSDK_CHAR_MIN = fbx_wrapperPINVOKE.FBXSDK_CHAR_MIN_get();
  public static readonly int FBXSDK_CHAR_MAX = fbx_wrapperPINVOKE.FBXSDK_CHAR_MAX_get();
  public static readonly int FBXSDK_UCHAR_MIN = fbx_wrapperPINVOKE.FBXSDK_UCHAR_MIN_get();
  public static readonly int FBXSDK_UCHAR_MAX = fbx_wrapperPINVOKE.FBXSDK_UCHAR_MAX_get();
  public static readonly int FBXSDK_SHORT_MIN = fbx_wrapperPINVOKE.FBXSDK_SHORT_MIN_get();
  public static readonly int FBXSDK_SHORT_MAX = fbx_wrapperPINVOKE.FBXSDK_SHORT_MAX_get();
  public static readonly int FBXSDK_USHORT_MIN = fbx_wrapperPINVOKE.FBXSDK_USHORT_MIN_get();
  public static readonly int FBXSDK_USHORT_MAX = fbx_wrapperPINVOKE.FBXSDK_USHORT_MAX_get();
  public static readonly int FBXSDK_INT_MIN = fbx_wrapperPINVOKE.FBXSDK_INT_MIN_get();
  public static readonly int FBXSDK_INT_MAX = fbx_wrapperPINVOKE.FBXSDK_INT_MAX_get();
  public static readonly int FBXSDK_UINT_MIN = fbx_wrapperPINVOKE.FBXSDK_UINT_MIN_get();
  public static readonly int FBXSDK_UINT_MAX = fbx_wrapperPINVOKE.FBXSDK_UINT_MAX_get();
  public static readonly int FBXSDK_LONG_MIN = fbx_wrapperPINVOKE.FBXSDK_LONG_MIN_get();
  public static readonly int FBXSDK_LONG_MAX = fbx_wrapperPINVOKE.FBXSDK_LONG_MAX_get();
  public static readonly int FBXSDK_ULONG_MIN = fbx_wrapperPINVOKE.FBXSDK_ULONG_MIN_get();
  public static readonly int FBXSDK_ULONG_MAX = fbx_wrapperPINVOKE.FBXSDK_ULONG_MAX_get();
  public static readonly double FBXSDK_TOLERANCE = fbx_wrapperPINVOKE.FBXSDK_TOLERANCE_get();
  public static readonly bool IOSVisible = fbx_wrapperPINVOKE.IOSVisible_get();
  public static readonly bool IOSHidden = fbx_wrapperPINVOKE.IOSHidden_get();
  public static readonly bool IOSSavable = fbx_wrapperPINVOKE.IOSSavable_get();
  public static readonly bool IOSNotSavable = fbx_wrapperPINVOKE.IOSNotSavable_get();
  public static readonly bool IOSEnabled = fbx_wrapperPINVOKE.IOSEnabled_get();
  public static readonly bool IOSDisabled = fbx_wrapperPINVOKE.IOSDisabled_get();
  public static readonly int IOSBinary = fbx_wrapperPINVOKE.IOSBinary_get();
  public static readonly int IOSASCII = fbx_wrapperPINVOKE.IOSASCII_get();
  public static readonly string FBXSDK_CURVENODE_TRANSFORM = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_TRANSFORM_get();
  public static readonly string FBXSDK_CURVENODE_TRANSLATION = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_TRANSLATION_get();
  public static readonly string FBXSDK_CURVENODE_ROTATION = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_ROTATION_get();
  public static readonly string FBXSDK_CURVENODE_SCALING = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_SCALING_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_X = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COMPONENT_X_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_Y = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COMPONENT_Y_get();
  public static readonly string FBXSDK_CURVENODE_COMPONENT_Z = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COMPONENT_Z_get();
  public static readonly string FBXSDK_CURVENODE_COLOR = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COLOR_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_RED = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COLOR_RED_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_GREEN = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COLOR_GREEN_get();
  public static readonly string FBXSDK_CURVENODE_COLOR_BLUE = fbx_wrapperPINVOKE.FBXSDK_CURVENODE_COLOR_BLUE_get();
  public static readonly string FBXSDK_TAKENODE_DEFAULT_NAME = fbx_wrapperPINVOKE.FBXSDK_TAKENODE_DEFAULT_NAME_get();
  public static readonly string FBXSDK_ROOTCURVE_DEFAULT_NAME = fbx_wrapperPINVOKE.FBXSDK_ROOTCURVE_DEFAULT_NAME_get();
}

}
